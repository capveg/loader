#!/bin/sh
############################################################
# <bsn.cl fy=2013 v=onl>
# 
#        Copyright 2013, 2014 BigSwitch Networks, Inc.        
# 
# Licensed under the Eclipse Public License, Version 1.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
# 
#        http://www.eclipse.org/legal/epl-v10.html
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific
# language governing permissions and limitations under the
# License.
# 
# </bsn.cl>
############################################################
#
# sysinit
#
# Busybox sysinit script.
#
############################################################

# Suppress console output until baud rate is set
exec 4>&1 1>/tmp/sysinit.out 2>&1
restoreconsole() { cat /tmp/sysinit.out 1>&4; exec 1>&4 2>&4; >/tmp/sysinit.out; }
trap "restoreconsole; reboot -f" EXIT


# Mount special filesystems
mount -t proc proc /proc
mount -t sysfs sysfs /sys
mount -o remount,size=1M /dev


# Grab cmdline settings
touch /etc/boot-config /etc/cmdline
rm -f /etc/onl_stage1 /etc/onl_kdump /etc/crashkernel
tr -s " " "\n" </proc/cmdline |
while read -r l; do
    n=${l%%=*}
    [ "$l" = "${l#*=}" ] && v= || v="${l#*=}"
    case $n in
	onl_platform)
	    echo "$v" >/etc/onl_platform
	    ;;
	onl_stage1)
	    touch /etc/onl_stage1
	    ;;
	onl_kdump)
	    touch /etc/onl_kdump
	    ;;
	mem|crashkernel|nmi_watchdog|loglevel|ignore_loglevel)
	    ;;
	*)
	    if [ "$(echo $n | tr -d '[:upper:]')" ]; then
		echo "$l" >>/etc/cmdline
	    else
		echo "$l" >>/etc/boot-config
	    fi
	    ;;
    esac
done


# Populate platform-specific settings
. /lib/platform-detect


# Tell kernel to invoke mdev when devices are added or removed
echo /sbin/mdev >/proc/sys/kernel/hotplug


# Initialize any block and net devices already present
( cd /sys/class/block; for d in *; do initblockdev $d add; done )
if [ -d /sys/class/ubi ]; then
    ( cd /sys/class/ubi; for d in *; do initblockdev $d add; done )
fi
( cd /sys/class/net; for d in *; do initnetdev $d add; done )

# Initialize platform mounts
initmounts

if [ ! -f /etc/onl_stage1 ] && [ ! -f /etc/onl_kdump ]; then
    if [ -f /etc/issue ]; then
	cat /etc/issue
    fi
    if [ -f /etc/fw_env.config ]; then
        ver=$(fw_printenv onl_installer_version 2>/dev/null)
        ver=${ver#onl_installer_version=}
        if [ "$ver" ]; then
            echo "Open Network Linux installer [${ver}]"
            echo ""
        fi
    fi

    waitforblockdev /mnt/flash
    sleep 1 # wait for external block devices to be mounted

    # If an external block device contains a file named wipe and a
    # boot-config whose mtime differs from /mnt/flash/boot-config, wipe
    # /mnt/flash clean and copy everything from the external device
    for d in /mnt/*; do
        [ ! -d $d ] && continue
        [ ! -f $d/wipe ] && continue
        [ ! -f $d/boot-config ] && continue
        [ -f /mnt/flash/boot-config ] \
            && [ ! $d/boot-config -nt /mnt/flash/boot-config ] \
            && [ ! $d/boot-config -ot /mnt/flash/boot-config ] \
            && continue
        restoreconsole
        (
            set -e
            cd $d
            echo "Erasing /mnt/flash"
            rm -rf /mnt/flash/* /mnt/flash/.[^.]* /mnt/flash/..?*
            echo "Copying data from $d to /mnt/flash"
            cp -a . /mnt/flash/
        )
        exit
    done

    [ ! -f /mnt/flash/boot-config ] || cat /mnt/flash/boot-config >>/etc/boot-config
fi


# Parse settings
touch /etc/SWI /etc/CONSOLESPEED /etc/PASSWORD /etc/NET
while read -r l; do
    n=${l%%=*}
    [ "$l" = "${l#*=}" ] && v= || v="${l#*=}"
    case $n in
	SWI)
	    echo "$v" >/etc/SWI
	    ;;
	CONSOLESPEED)
	    echo "$v" >/etc/CONSOLESPEED
	    ;;
	PASSWORD)
	    echo "$v" >/etc/PASSWORD
	    ;;
	NET*)
	    echo "$l" >>/etc/NET
	    ;;
    esac
done </etc/boot-config


# Set console baud rate and restore output
CONSOLESPEED=$(cat /etc/CONSOLESPEED)
if [ "${CONSOLESPEED}" ]; then
    stty ${CONSOLESPEED}
fi
stty sane pass8 -ixon -cstopb
restoreconsole


# If we were invoked via kdump, write a crash log to flash as quickly as possible
if [ -f /tmp/onl_kdump ]; then
    . /lib/kdump
    sleep 30
    exit
fi


# By this point PASSWORD must be set in /etc/PASSWORD so /bin/login
# can authenticate the user
trap - EXIT
